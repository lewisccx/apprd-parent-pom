<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>706f4d0a-e4a3-40fb-8365-ae5ac1f0a8d7</groupId>
    <artifactId>apprd-bom</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <relativePath>../apprd-bom/pom.xml</relativePath>
  </parent>

  <groupId>706f4d0a-e4a3-40fb-8365-ae5ac1f0a8d7</groupId>
  <artifactId>apprd-parent-pom</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>apprd-parent-pom</name>

  <properties>
    <api.layer.eapi>Experience</api.layer.eapi>
    <api.layer.papi>Process</api.layer.papi>
    <api.layer.sapi>System</api.layer.sapi>
    <api.layer.backend>Backend</api.layer.backend>
    <api.layer.none>None</api.layer.none>
    <!-- Not explicitly used but needed for deployment to Exchange, otherwise Exchange cannot determine the asset type -->
    <type>custom</type>
    <!-- for automated deployments -->
    <deployment.env>set with -Ddeployment.env=...</deployment.env>
    <api.env>set with -api.env=...</api.env>
    <!-- <projectName.prefix>${projectName.prefix}-</deployment.suffix> -->
    <deployment.name>${api.env}-${project.name}</deployment.name>
    <!-- requires AP environments to have the same name as the env property value in Mule apps (which determines the property files to load) -->
    <ap.environment>${deployment.env}</ap.environment>
    <ap.client_id>set with -Dap.client_id=...</ap.client_id>
    <ap.client_secret>set with -Dap.client_secret=...</ap.client_secret>
    <ap.ca.client_id>set with -Dap.ca.client_id=...</ap.ca.client_id>
    <ap.ca.client_secret>set with -Dap.ca.client_secret=...</ap.ca.client_secret>
    <!-- deployment.env is referring to both config file and environment in AP  -->
    <!-- set encrypt.key for decrypting secure (encryped) properties files (but don't set it here!) -->
  </properties>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <configuration>
            <nonFilteredFileExtensions>
              <nonFilteredFileExtension>p12</nonFilteredFileExtension>
              <nonFilteredFileExtension>crt</nonFilteredFileExtension>
              <nonFilteredFileExtension>pem</nonFilteredFileExtension>
            </nonFilteredFileExtensions>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.mule.tools.maven</groupId>
          <artifactId>mule-maven-plugin</artifactId>
          <extensions>true</extensions>
          <configuration>
            <cloudhub2Deployment>
              <businessGroup />
              <environment>${ap.environment}</environment>
              <muleVersion>${app.runtime.semver}</muleVersion>
              <target>viseo-asia-private-space</target>
              <provider>MC</provider>
              <replicas>1</replicas>
              <vCores>0.1</vCores>
              <applicationName>${deployment.name}</applicationName>
              <connectedAppClientId>${ap.ca.client_id}</connectedAppClientId>
              <connectedAppClientSecret>${ap.ca.client_secret}</connectedAppClientSecret>
              <connectedAppGrantType>client_credentials</connectedAppGrantType>
              <properties>
                <user.timezone>${user.timezone}</user.timezone>
                <env>${api.env}</env>
                <anypoint.platform.config.analytics.agent.enabled>true</anypoint.platform.config.analytics.agent.enabled>
                <anypoint.platform.visualizer.displayName>${project.name}</anypoint.platform.visualizer.displayName>
                <anypoint.platform.visualizer.layer>${api.layer}</anypoint.platform.visualizer.layer>
              </properties>
              <secureProperties>
                <encrypt.key>${encrypt.key}</encrypt.key>
                <anypoint.platform.client_id>${ap.client_id}</anypoint.platform.client_id>
                <anypoint.platform.client_secret>${ap.client_secret}</anypoint.platform.client_secret>
              </secureProperties>
              <deploymentSettings>
                <http>
                  <inbound>
                    <lastMileSecurity>true</lastMileSecurity>
                    <forwardSslSession>false</forwardSslSession>
                  </inbound>
                </http>
                <generateDefaultPublicUrl>true</generateDefaultPublicUrl>
              </deploymentSettings>
              <integrations>
                <services>
                  <objectStoreV2>
                    <enabled>true</enabled>
                  </objectStoreV2>
                </services>
              </integrations>
            </cloudhub2Deployment>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.mulesoft.munit.tools</groupId>
          <artifactId>munit-maven-plugin</artifactId>
          <executions>
            <execution>
              <id>test</id>
              <phase>test</phase>
              <goals>
                <goal>test</goal>
                <goal>coverage-report</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <runtimeVersion>${app.runtime}</runtimeVersion>
            <runtimeProduct>MULE_EE</runtimeProduct>
            <environmentVariables>
              <!-- this implies that all tests run in the same Maven build must use the same encrypt.key -->
              <encrypt.key>${encrypt.key}</encrypt.key>
            </environmentVariables>
            <coverage>
              <runCoverage>true</runCoverage>
              <formats>
                <format>console</format>
                <format>html</format>
              </formats>
            </coverage>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
